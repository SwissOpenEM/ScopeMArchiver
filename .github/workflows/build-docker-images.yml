name: Docker Image CI


env:
    # Use docker.io for Docker Hub if empty
    REGISTRY: ghcr.io
    # github.repository as <account>/<repo>
    MOCKARCHIVER_IMAGE_NAME: ${{ github.repository }}-mockarchiver
    WEBUPLOADER_IMAGE_NAME: ${{ github.repository }}-webuploader

on:
  push:
    branches: [ $default-branch ]
  pull_request:

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      mockarchiver: ${{ steps.filter.outputs.mockarchiver }}
      webuploader: ${{ steps.filter.outputs.webuploader }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          mockarchiver:
            - 'mockarchiver/**'
          webuploader:
            - 'webuploader/**'

  build_mockarchiver:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.mockarchiver == 'true' }} || github.event_name != 'pull_request'
      
    steps:
    - uses: actions/checkout@v3

    - name: Log into registry ${{ env.REGISTRY }}
      # if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.MOCKARCHIVER_IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v5
      with:
          context: ./mockarchiver
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build_webuploader:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.webuploader == 'true' }} || github.event_name != 'pull_request'
      
    steps:
    - uses: actions/checkout@v3

    - name: Log into registry ${{ env.REGISTRY }}
      # if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.MOCKARCHIVER_IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v5
      with:
          context: ./webuploader
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}