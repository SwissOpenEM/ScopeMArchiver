services:
  traefik:
    image: "traefik:v3.3.1"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--providers.file.filename=/opt/traefik.yml"
    ports:
      - "443:443"
      - "80:80"
      - 8080:8080
    volumes:
      - /home/wiphilip/certs/bundle.pem:/opt/certs/cert_scopem-openem.ethz.ch.pem
      - /home/wiphilip/certs/cert_scopem-openem.ethz.ch.key:/opt/certs/cert_scopem-openem.ethz.ch.key
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${HOST}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls"
      - "traefik.frontend.headers.passHostHeader=true"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
    networks:
      - scopemarchiver_network
    configs:
      - source: traefik.yml
        target: /opt/traefik.yml

  archiver-backend:
    image: ${OPENEM_BACKEND_IMAGE_NAME}:${OPENEM_IMAGE_TAG}
    container_name: archiver-backend
    build:
      context: ./backend/api
      dockerfile: ./Dockerfile
    environment:
      - PREFECT_LOGGING_LEVEL=${PREFECT_LOGGING_LEVEL}
      - PREFECT_API_URL=http://prefect-server:4200/api
      - UVICORN_ROOT_PATH=/archiver/api/v1
      - UVICORN_PORT=8000
      - UVICORN_LOG_LEVEL=info
      - UVICORN_RELOAD=False
      - MINIO_ENDPOINT=${MINIO_EXTERNAL_ENDPOINT}
    secrets:
      - minio_user
      - minio_password
    expose:
      - 8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${HOST}`) && PathPrefix(`/archiver/api/v1`)"
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/archiver/api/v1"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls"
      - "traefik.http.routers.backend.middlewares=backend-stripprefix"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    networks:
      - scopemarchiver_network
  prefect-server:
    image: prefecthq/prefect:${PREFECT_VERSION}
    container_name: prefect-server
    restart: always
    volumes:
      - prefect-volume-new:/root/.prefect
    entrypoint:
      - /bin/sh
      - -c
      - |
        export PREFECT_API_DATABASE_PASSWORD=$$(cat /var/run/secrets/postgres_pass)
        export PREFECT_API_DATABASE_USER=$$(cat /var/run/secrets/postgres_user)
        export PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://$$PREFECT_API_DATABASE_USER:$$PREFECT_API_DATABASE_PASSWORD@postgres:5432/prefect
        /opt/prefect/entrypoint.sh prefect server start

    secrets:
      - postgres_pass
      - postgres_user
    healthcheck:
      test: [ "CMD", "prefect", "version" ]
      interval: 5s
      timeout: 15s
      retries: 5
      start_period: 5s
    environment:
      - PREFECT_LOGGING_LEVEL=${PREFECT_LOGGING_LEVEL}
      - PREFECT_HOME=/opt/prefect
      - PREFECT_API_DATABASE_ECHO=False
      - PREFECT_API_DATABASE_MIGRATE_ON_START=True
      - PREFECT_TASK_DEFAULT_RETRIES=2
      - PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS=[1,10,100]
      # working; PREFECT has some issues with api prefixes...
      - PREFECT_UI_SERVE_BASE=/archiver/prefect/ui
      - PREFECT_UI_URL=http://prefect-server:4200/api
      - PREFECT_API_URL=https://${HOST}/archiver/prefect/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
    expose:
      - 4200
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.prefect-server.loadbalancer.server.port=4200"
      # UI
      - "traefik.http.routers.prefect-server.rule=Host(`${HOST}`) && PathPrefix(`/archiver/prefect/ui`)"
      - "traefik.http.routers.prefect-server.entrypoints=websecure"
      - "traefik.http.routers.prefect-server.tls"
      - "traefik.http.services.prefect-server.loadbalancer.server.port=4200"

      - "traefik.http.routers.prefect-api-server.rule=Host(`${HOST}`) && PathPrefix(`/archiver/prefect/api`)"
      - "traefik.http.routers.prefect-api-server.entrypoints=websecure"
      - "traefik.http.routers.prefect-api-server.tls"
      - "traefik.http.middlewares.prefect-api-strip.stripprefix.prefixes=/archiver/prefect"
      - "traefik.http.routers.prefect-api-server.middlewares=prefect-api-strip"
    networks:
      - scopemarchiver_network
  postgres:
    image: postgres:15.2-alpine
    restart: always
    environment:
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_pass
      - POSTGRES_DB=prefect
    secrets:
      - postgres_user
      - postgres_pass
    expose:
      - 5432
    volumes:
      - postgres-volume-new:/var/lib/postgresql/data
    networks:
      - scopemarchiver_network
volumes:
  postgres-volume-new:
    driver: local
  prefect-volume-new:
    driver: local

secrets:
  postgres_user:
    file: ./.secrets/postgresuser.txt
  postgres_pass:
    file: ./.secrets/postgrespass.txt
  minio_user:
    file: ./.secrets/miniouser.txt
  minio_password:
    file: ./.secrets/miniopass.txt

configs:
  traefik.yml:
    content: |
      tls:
        certificates:
          - certFile: /opt/certs/cert_scopem-openem.ethz.ch.pem
            keyFile: /opt/certs/cert_scopem-openem.ethz.ch.key
            stores: 
              - default
        stores:
          default:
            defaultCertificate:
              certFile: /opt/certs/cert_scopem-openem.ethz.ch.pem
              keyFile: /opt/certs/cert_scopem-openem.ethz.ch.key
