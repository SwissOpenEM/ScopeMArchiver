services:
  prefect-server:
    image: prefecthq/prefect:2-python3.11
    restart: always
    volumes:
      - ${DATA_DIR}/prefect:/root/.prefect
    entrypoint:
      [
        "/opt/prefect/entrypoint.sh",
        "prefect",
        "server",
        "start"
      ]
    environment:
      - PREFECT_API_DATABASE_ECHO=False
      - PREFECT_API_DATABASE_MIGRATE_ON_START=True
      - PREFECT_UI_SERVE_BASE=/prefect-ui

      # - PREFECT_UI_URL=prefect.${HOST}/prefect-ui
      # - PREFECT_API_URL=prefect.${HOST}/prefect/api

      # working
      - PREFECT_UI_URL=http://prefect-server:4200/api
      - PREFECT_API_URL=http://prefect-server:4200/api

      # - PREFECT_UI_URL=127.0.0.1:4200/api
      # - PREFECT_API_URL=http://prefect-server:4200/api
      # If you want to access Prefect Server UI from anywhere other than the Docker host machine, you will need to change
      # PREFECT_UI_URL and PREFECT_API_URL to match the external hostname/IP of the host machine. For example:
      #- PREFECT_UI_URL=http://external-ip:4200/api
      #- PREFECT_API_URL=http://external-ip:4200/api
      # - PREFECT_SERVER_API_HOST=perfect.${HOST}/prefect
      # - PREFECT_SERVER_API_PORT=4200
      # - PREFECT_ORION_API_HOST=http://prefect-server
      - PREFECT_SERVER_API_HOST=0.0.0.0
      # - PREFECT_ORION_API_PORT=4200
      # - PREFECT_ORION_UI_API_URL=${HOST}/prefect/api
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://postgres_user:postgres_pw@postgres:5432/prefect
      # Uncomment the following line if you want to use the 'S3 Bucket' storage block instead of the older 'S3' storage
      # - EXTRA_PIP_PACKAGES=prefect-aws
    ports:
      - 4200:4200
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.prefect-server.loadbalancer.server.port=4200"
      # UI
      - "traefik.http.routers.prefect-server.rule=Host(`${HOST}`) && PathPrefix(`/prefect-ui`)"
      - "traefik.http.routers.prefect-server.entrypoints=web"
      # API: TODO: this is workaround; prefect cannot serve the api behind a prefix so this is on root
      - "traefik.http.routers.prefect-api-server.rule=Host(`${HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.prefect-api-server.entrypoints=web"

      - "traefik.http.routers.prefect-api-strip-server.rule=Host(`  ${HOST}`) && PathPrefix(`/perfect`)"
      - "traefik.http.middlewares.prefect-api-strip-server.stripprefix.prefixes=/perfect`"
      - "traefik.http.routers.prefect-api-strip-server.entrypoints=web"
      - "traefik.http.routers.prefect-server.middlewares=prefect-api-strip-server"
  prefect-worker:
    image: ${PREFECT_WORKER_IMAGE_NAME}:${OPENEM_IMAGE_TAG}
    container_name: prefect-worker
    build:
      context: ./backend/
      dockerfile: ./prefect-worker.Dockerfile
    environment:
      - PREFECT_LOGGING_LEVEL=DEBUG
      - PREFECT_API_URL=http://prefect-server:4200/api
      - MINIO_REGION=${MINIO_REGION}
      - MINIO_USER=${MINIO_USER}
      - MINIO_PASS=${MINIO_PASS}
      - MINIO_ARCHIVAL_BUCKET=${MINIO_ARCHIVAL_BUCKET}
      - MINIO_RETRIEVAL_BUCKET=${MINIO_RETRIEVAL_BUCKET}
      - MINIO_URL=minio:9000
      - ARCHIVER_ENABLED=${ARCHIVER_ENABLED}
      - INGESTER_ENABLED=${INGESTER_ENABLED}
      - SCICAT_ENDPOINT=http://scicatmock:8000
    depends_on:
      - prefect-server

  ## Prefect Database
  postgres:
    image: postgres:15.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres_user
      - POSTGRES_PASSWORD=postgres_pw
      - POSTGRES_DB=prefect
    expose:
      - 5432
    volumes:
      - ${DATA_DIR}/postgres:/var/lib/postgresql/data

  scicatmock:
    image: scicatmock:latest
    container_name: scicatmock
    build:
      context: ./backend
      dockerfile: ./scicatmock.Dockerfile
    ports:
      - 8005:8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.scicatmock.rule=Host(`${HOST}`) && PathPrefix(`/scicatmock`)"
      - "traefik.http.middlewares.scicatmock-stripprefix.stripprefix.prefixes=/scicatmock`"
      - "traefik.http.routers.scicatmock.entrypoints=web"
      - "traefik.http.routers.scicatmock.middlewares=scicatmock-stripprefix"
      - "traefik.http.services.scicatmock.loadbalancer.server.port=8000"
