services:
  traefik:
    image: "traefik:v3.3.4"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--providers.file.filename=/opt/traefik.yml"
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ${CERTIFICATE_FILE:-/dev/null}:/opt/certs/cert_scopem-openem.ethz.ch.pem
      - ${CERTIFICATE_KEY_FILE:-/dev/null}:/opt/certs/cert_scopem-openem.ethz.ch.key
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${HOST}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.middlewares=${AUTH_MIDDLEWARE}"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls"
      - "traefik.frontend.headers.passHostHeader=true"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
    networks:
      - scopemarchiver_network
    configs:
      - source: traefik.yml
        target: /opt/traefik.yml

  authentik-proxy:
    image: ghcr.io/goauthentik/proxy
    ports:
      - 9002:9000
      - 9443:9443
    restart: unless-stopped
    environment:
      AUTHENTIK_HOST: ${AUTHENTIK_HOST}
      AUTHENTIK_INSECURE: ${AUTHENTIK_INSECURE}
      AUTHENTIK_TOKEN:
      AUTHENTIK_LOG_LEVEL: info
    entrypoint: ["/bin/sh", "-c", "export AUTHENTIK_TOKEN=$(cat /run/secrets/authentik_token) && ./proxy"]

    networks:
      - scopemarchiver_network
    secrets:
      - authentik_token
    labels:
      traefik.enable: true
      traefik.port: 9000
      traefik.http.routers.authentik.rule: (Host(`host.docker.internal`) || Host(`${HOST}`)) && PathPrefix(`/outpost.goauthentik.io/`)
      traefik.http.routers.authentik.entrypoints: websecure
      traefik.http.routers.authentik.tls: ""
      # `authentik-proxy` refers to the service name in the compose file.
      traefik.http.middlewares.authentik.forwardauth.address: http://authentik-proxy:9000/outpost.goauthentik.io/auth/traefik
      traefik.http.middlewares.authentik.forwardauth.trustForwardHeader: true
      traefik.http.middlewares.authentik.forwardauth.authResponseHeaders: X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version

configs:
  traefik.yml:
    content: |
      tls:
        certificates:
          - certFile: /opt/certs/cert_scopem-openem.ethz.ch.pem
            keyFile: /opt/certs/cert_scopem-openem.ethz.ch.key
            stores: 
              - default
        stores:
          default:
            defaultCertificate:
              certFile: /opt/certs/cert_scopem-openem.ethz.ch.pem
              keyFile: /opt/certs/cert_scopem-openem.ethz.ch.key
secrets:
  authentik_token:
    file: ./.secrets/authentik_token
