openapi: 3.1.0
info:
  title: ETHZ Archiver Service
  description: REST API endpoint provider for presigned S3 upload and archiving workflow scheduling
  version: 0.1.0
servers:
  - url: /
security:
  - BearerAuth: []
paths:
  /token:
    post:
      security:
        - SciCatAuth: []
      operationId: create_new_service_token
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServiceTokenResp"
          description: Service Token created
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
          description: Internal Server Error
      summary: Create New Service Token
      tags:
        - service_token
  /archiver/new_dataset:
    post:
      # https://github.com/SwissOpenEM/ScopeMArchiver/issues/151
      security: []
      operationId: create_new_dataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetBody"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasetResp"
          description: Dataset Created
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
          description: Internal Server Error
      summary: Create New Dataset
      tags:
        - archiving
  /archiver/jobs:
    post:
      # https://github.com/SwissOpenEM/ScopeMArchiver/issues/151
      security: []
      operationId: create_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateJobBody"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateJobResp"
          description: Job Created
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Data Validation Error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
          description: Internal Server Error
      summary: Create Archiver Job
      tags:
        - archiving
  /s3/presignedUrls:
    post:
      operationId: get_presigned_urls
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PresignedUrlBody"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PresignedUrlResp"
          description: Presigned URLs created
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
          description: Internal Server Error
      summary: Get Presigned Urls
      tags:
        - presignedUrls
  /s3/completeUpload:
    post:
      operationId: complete_upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteUploadBody"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompleteUploadResp"
          description: Upload completed
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
          description: Internal Server Error
      summary: Complete Upload
      tags:
        - presignedUrls
  /s3/abortMultipartUpload:
    post:
      operationId: abort_multipart_upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AbortUploadBody"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbortUploadResp"
          description: Abort multipart upload requested
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
          description: Internal Server Error
      summary: Abort Multipart Upload
      tags:
        - presignedUrls
components:
  securitySchemes:
    BearerAuth: # RS256 tokens signed by Keycloak
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, but indicates the format of the token
    SciCatAuth: # HS256 tokens signed by SciCat
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, but indicates the format of the token
  schemas:
    CreateServiceTokenResp:
      properties:
        access_token:
          type: string
          description: The JWT access token
        expires_in:
          type: integer
          description: The duration in seconds the access token is valid for
          example: 300
        refresh_token:
          type: string
          description: The JWT refresh token
        refresh_expires_in:
          type: integer
          description: The duration in seconds the refresh token is valid for
          example: 1800
        token_type:
          type: string
          description: Bearer
          example: Bearer
        not-before-policy:
          type: integer
          description: Timestamp that indicates the time before which the JWT must not be accepted for processing
          example: 0
        session_state:
          type: string
          description: Session ID, identifier that uniquely ties the session to the authenticated user
          example: ec313d7a-df9d-4390-865e-c6d606156fdc
        scope:
          type: string
          description: Claim in a JWT defines the set of permissions or access rights granted
          example: email profile
      required:
        - access_token
        - refresh_token
      title: CreateServiceTokenResp
    AbortUploadBody:
      example:
        UploadID: UploadID
        ObjectName: ObjectName
      properties:
        UploadID:
          title: Uploadid
          type: string
        ObjectName:
          title: Objectname
          type: string
      required:
        - ObjectName
        - UploadID
      title: AbortUploadBody
    AbortUploadResp:
      example:
        UploadID: UploadID
        ObjectName: ObjectName
        Message: Succeeded
      properties:
        Message:
          title: Message
          type: string
        UploadID:
          title: Uploadid
          type: string
        ObjectName:
          title: Objectname
          type: string
      required:
        - ObjectName
        - UploadID
        - Message
      title: AbortUploadResp
    CompletePart:
      example:
        PartNumber: 0
        ETag: ETag
        ChecksumSHA256: ChecksumSHA256
      properties:
        PartNumber:
          title: Partnumber
          type: integer
        ETag:
          title: Etag
          type: string
        ChecksumSHA256:
          title: Checksumsha256
          type: string
      required:
        - ChecksumSHA256
        - ETag
        - PartNumber
      title: CompletePart
    CompleteUploadBody:
      example:
        Parts:
          - PartNumber: 0
            ETag: ETag
            ChecksumSHA256: ChecksumSHA256
          - PartNumber: 0
            ETag: ETag
            ChecksumSHA256: ChecksumSHA256
        UploadID: UploadID
        ObjectName: ObjectName
        ChecksumSHA256: ChecksumSHA256
      properties:
        ObjectName:
          title: Objectname
          type: string
        UploadID:
          title: Uploadid
          type: string
        Parts:
          items:
            $ref: "#/components/schemas/CompletePart"
          title: Parts
          type: array
        ChecksumSHA256:
          title: Checksumsha256
          type: string
      required:
        - ChecksumSHA256
        - ObjectName
        - Parts
        - UploadID
      title: CompleteUploadBody
    CompleteUploadResp:
      example:
        Location: http://minio/object
        Key: ObjectName
      properties:
        Location:
          title: Location
          type: string
        Key:
          title: Key
          type: string
      required:
        - Location
        - Key
      title: CompleteUploadResp
    CreateDatasetBody:
      example:
        FileSizeInMB: 40
        NumberOfFiles: 20
        DatablockSizeInMB: 400
      properties:
        FileSizeInMB:
          title: FileSizeInMB
          type: integer
        NumberOfFiles:
          title: NumberOfFiles
          type: integer
        DatablockSizeInMB:
          title: DatablockSizeInMB
          type: integer
        DataSetId:
          title: DatasetID
          type: string
      required:
        - FileSizeInMB
        - NumberOfFiles
        - DatablockSizeInMB
      title: CreateDatasetBody
    CreateDatasetResp:
      properties:
        Name:
          title: Deployment Name
          type: string
        Uuid:
          title: Uuid
          type: string
          format: uuid
        DataSetId:
          title: DatasetID
          type: string
          format: uuid
      required:
        - Name
        - Uuid
        - DataSetId
      title: CreateDatasetResp
    CreateJobBody:
      properties:
        Id:
          title: Id
          type: string
          format: uuid
        Type:
          title: Type
          type: string
          enum: [archive, retrieve]
      required:
        - Id
        - Type
      title: CreateJobBody
    CreateJobResp:
      properties:
        Uuid:
          title: JobID
          type: string
          format: uuid
        Name:
          title: JobName
          type: string
      required:
        - Uuid
        - Name
      title: CreateJobResp
    HTTPValidationError:
      example:
        detail:
          - msg: msg
            loc:
              - ValidationError_loc_inner
              - ValidationError_loc_inner
            type: type
          - msg: msg
            loc:
              - ValidationError_loc_inner
              - ValidationError_loc_inner
            type: type
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          title: detail
          type: array
      title: HTTPValidationError
    InternalError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: A specific error code indicating the error type
        message:
          type: string
          description: A human-readable message providing more details about the error
        details:
          type: string
          description: Additional context or information about the error
        timestamp:
          type: string
          format: date-time
          description: The time when the error occurred
    PresignedUrlBody:
      example:
        Parts: 0
        ObjectName: ObjectName
      properties:
        ObjectName:
          title: Objectname
          type: string
        Parts:
          title: Parts
          type: integer
          minimum: 1
      required:
        - ObjectName
        - Parts
      title: PresignedUrlBody
    PresignedUrlResp:
      example:
        Urls:
          - Urls
          - Urls
        UploadID: UploadID
      properties:
        UploadID:
          title: Uploadid
          type: string
        Urls:
          items:
            type: string
          title: Urls
          type: array
      required:
        - UploadID
        - Urls
      title: PresignedUrlResp
    ValidationError:
      example:
        msg: msg
        loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
        type: type
      properties:
        loc:
          items:
            $ref: "#/components/schemas/ValidationError_loc_inner"
          title: loc
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
        - loc
        - msg
        - type
      title: ValidationError
    ValidationError_loc_inner:
      anyOf:
        - type: string
        - type: integer
      title: ValidationError_loc_inner
