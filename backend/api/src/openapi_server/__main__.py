# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import datetime
from importlib.metadata import version
import pathlib
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
import uvicorn
import jwt

from openapi_server.apis.archiving_api import router as ArchivingApiRouter
from openapi_server.apis.presigned_urls_api import router as PresignedUrlsApiRouter

from .settings import Settings
from logging import getLogger

__version__ = version("archiver-service")
print(f"Version: {__version__}")
_LOGGER = getLogger("api")

app = FastAPI(
    title="ETHZ Archiver Service",
    description="REST API endpoint provider for presigned S3 upload and archiving workflow scheduling",
    version=__version__,
)

settings = Settings()


def generate_test_token():
    payload = {
        "sub": "user_id_123",  # Subject (e.g., user ID)
        "name": "John Doe",  # Example custom claim
        "exp": datetime.datetime.now(datetime.UTC)
        + datetime.timedelta(days=365),  # Expiration time
        "iss": settings.ISSUER,
        "aud": settings.AUDIENCE,
    }
    return jwt.encode(payload, settings.SECRET_KEY, algorithm=settings.ALGORITHM)


if __name__ == "__main__":

    _LOGGER.setLevel(settings.UVICORN_LOG_LEVEL.upper())

    origins = [
        "http://127.0.0.1*",
        "http://localhost:5173",
    ]

    app.add_middleware(
        CORSMiddleware,
        allow_origins=origins,
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
    )

    app.include_router(ArchivingApiRouter)
    app.include_router(PresignedUrlsApiRouter)

    uvi_config = uvicorn.Config(
        app,
        host="0.0.0.0",
        port=settings.UVICORN_PORT,
        root_path=settings.UVICORN_ROOT_PATH,
        reload=settings.UVICORN_RELOAD,
        log_level=settings.UVICORN_LOG_LEVEL,
        reload_dirs=[str(pathlib.Path(__file__).parent)],
    )
    print("Test token:", generate_test_token())
    print("Valid for 365 days")
    server = uvicorn.Server(uvi_config)
    server.run()
